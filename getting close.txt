app.js
// Import express.js
const express = require("express");
// Create express app
var app = express();
// Add static files location
app.use(express.static("static"));

// Use the Pug templating engine
app.set('view engine', 'pug');
app.set('views', './app/views');

//***********************************************************************************

// We require the db.js file to set up the database connection.
const db = require('./services/db');

//Get the models
const { Teacher } = require("./models/teacher");

//***********************************************************************************

// Create a route for root - /
app.get("/", function(req, res) {
    res.render("index",
        {'title':'Profile Page', 'heading': 'Teacher Profile'});
});


// Create a route for testing the db
app.get("/all-teachers", function(req, res) {
    // Prepare an SQL query that will return all rows from the test_table
    var sql = 'select * from Teacher';
    db.query(sql).then(results => {
        res.render('all-teachers', {data:results});
    });
});


app.get("/single-teacher/:id", async function(req, res) {
    var tId = req.params.id;
    //Create a teacher class with ID passed
    var teacher = new Teacher(tId);
    await teacher.getTeacherName();
    await teacher.getTeacherSkills();
    res.send(teacher);
});



//*********************************************************************************

// Create a route for /goodbye
// Responds to a 'GET' request
app.get("/goodbye", function(req, res) {
    res.send("Goodbye world!");
});

// Create a dynamic route for /hello/<name>, where name is any value provided by user
// At the end of the URL
// Responds to a 'GET' request
app.get("/hello/:name", function(req, res) {
    // req.params contains any parameters in the request
    // We can examine it in the console for debugging purposes
    console.log(req.params);
    //  Retrieve the 'name' parameter and use it in a dynamically generated page
    res.send("Hello " + req.params.name);
});


//**********************************************************************************

// Start server on port 3000
app.listen(3000,function(){
    console.log(`Server running at http://127.0.0.1:3000/`);
});





teacher.js

const db = require('../services/db');
const { Skills } = require('./skills');

class Teacher {
    // Attributes
    T_ID;
    Name;
    skills = [];
    booking = [];

    constructor(T_ID) {
        this.T_ID = T_ID;
    }

    //Get the teacher name from the database
    async getTeacherName() {
        if (typeof this.Name !== 'string') {
            var sql = "SELECT * from Teacher where T_ID = ?"
            const results = await db.query(sql, [this.T_ID]);
            this.Name = results[0].Name;
        }
    }

    //Get the skills for this teacher
    async getTeacherSkills() {
        var sql = "SELECT Skills.SkillName, Skills.SkillType \
        FROM Teacher \
        JOIN Teaching ON Teacher.T_ID = Teaching.T_ID \
        JOIN Skills ON Skills.Skill_ID = Teaching.Skill_ID \
        WHERE Teacher.T_ID = ?;"
        const results = await db.query(sql, [this.T_ID]);
        for(var row of results) {
            this.skills.push(new Skills(row.SkillName, row.SkillType));
        }
    }

    async getTeacherBookings() {

    }

}

module.exports = {
    Teacher
}






skills.js

// Get the functions in the db.js file to use
const db = require('../services/db');

class Skills {
    skillId;
    skillName;
    skillType;

    constructor(SkillName, SkillType, Skill_ID) {
        this.skillName = SkillName;
        this.skillType = SkillType;
        this.skillId = Skill_ID;
    }

    async getSkillName() {
        var sql = "SELECT * from Skills where Skill_ID = ?"
        const results = await db.query(sql, [this.id]);
        console.log(results);
        this.skillName = results[0].SkillName;
        this.skillType = results[0].SkillType;
    }

}

module.exports = {
    Skills
}




booking.js
// Get the functions in the db.js file to use
const db = require('../services/db');

class Booking {
    Book_ID;
    T_ID;
    DayOfWeek;
    Slot;
    Duration;

    constructor(Book_ID, T_ID, DayOfWeek, Slot, Duration) {
        this.Book_ID = Book_ID;
        this.T_ID = T_ID;
        this.DayOfWeek = DayOfWeek;
        this.Slot = Slot;
        this.Duration = Duration;
    }

    async getBooking() {
        if (typeof this.Book_ID !== 'string') {
            var sql = "SELECT * from Booking where Book_ID = ?"
            const results = await db.query(sql, [this.Book_ID]);
            this.T_ID = results[0].T_ID;
            this.DayOfWeek = results[0].DayOfWeek;
            this.Slot = results[0].Slot;
            this.Duration = results[0].Duration;
        }
    }
}

module.exports = {
    Booking
}




.env

MYSQL_HOST=localhost
MYSQL_USER=admin
MYSQL_PASS=password
MYSQL_ROOT_PASSWORD=pass1234
MYSQL_DATABASE=link_learn
MYSQL_ROOT_USER=root
DB_CONTAINER=db
DB_PORT=3306

